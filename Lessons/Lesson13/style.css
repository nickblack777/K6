.box{
    display: flex;
    height: 400px;

    /*
        Все элементы внутри флекс-контейнера превращаются во флекс-элементы.
        А флекс-контейнер ведет себя как блочный при display: flex.

        Если задать display: inline-flex; то флекс-контейнер будет себя вести
        как инлайн(строчный) элемент.

        На флекс-элементы не влияют такие свойства css как:
        - float
        - clear
        - vertical-align
        - columns

        Есть свойства css, которые отключат флекс-элемент и он перестает быть частью
        флекс-контейнера:
        position: absolute \ fixed


    */

}
.box div{
    min-width: 100px;
}

.box div:nth-child(1){
    background-color: red;
}
.box div:nth-child(2){
    background-color: blue;
}
.box div:nth-child(3){
    background-color: purple;
}
.box div:nth-child(4){
    background-color: brown;
}


/* Свойства флекс-контейнера */

.box {

    flex-direction: row;

    /*
        Меняет направление Главной оси
        row (по-умолчанию)  - горизонтальная ось с лева на право
        column - вертикальная ось сверху в низ
        row-reverse - горизонтальная ось снизу в верх
        column-reverse - вертикальная ось с права на лево
    */


    flex-wrap: wrap;

    /*
        Позволяет включить перенос флекс-элементов на новую строку. (Главная ось начинает
        перываться и начинаться с новой строки если укзано значение wrap)

        nowrap - главная ось не прерывается и элементы всегда расположены в одну строку
        wrap - главная ось прерывается если ей не хватает места для элементов, переносит
        элементы на новую строку.
        wrap-reverse - то же что и wrap, только перенос не в низ в вверх
    */


    flex-flow: row wrap;

    /*
        Позволяет назначить сразу 2 параметра

        flex-flow: flex-direction flex-wrap;
    */


    justify-content: space-evenly;

    /*
        Позволяет выравнять элементы внутри контейнера по оси x (в случае direction 
        row) по оси y (в случае directiob column)

        flex-start (по-умолчанию) - элементы строятся начиная с начала главной оси
        и прижимаются друг к другу

        flex-end - элементы строятся относительно начала оси, но прижимаются к концу оси
        center - элементы центрируются (распределяя оставшееся пространтсво между ними
        по краям)

        space-between - крайний левый и крайний правый элементы прижимаются к левой\правой
        стороне контейнера, а оставшееся место распределяется как пространство между
        остальными элементами

        space-around - свободное место между элементами распространяется как промежутки
        между ними равномерно, но крайний левый и крайний правый промежуток в 2 раза
        меньше чем остальные.

        space-evenly - то же что space-around, только крайний правый и крайний левый 
        помежуток равны как и все остальные.

    */


    align-content: center;

    /*
        Позволяет задать, то как буду себя вести элементы в высоту.

        stretch (по-умолчанию) - элементы занимают максимальную высоту кросс-оси
        родителя(растягиваются на всю допустимую высоту). Если элементы идут в 2
        и более ряда, то они деляет высоту родителя между собой пропорционально.

        flex-start - элементы прижимаются к верхней части родителя. (к началу кросс-оси)

        flex-end - элементы прижимаются к нижней части родителя ( к концу кросс-оси)

        center - элементы центрируются относительно кросс-оси

        space-between - крайние строки элементов прижимаются к верхней и нижней сторонам
        крос-оси, оставшееся пространтсо распределяется как промежутки между строками.

        space-around - свободное пространтство распределяется между элементами
        как промежутки, крайний верхний и крайний нижний отступ в 2 раза меньше чем 
        остальные
        
        space-evenly - то же что и space-around, только все отступы между рядами одинаковые


    */


    align-items: stretch;

    /*
        Позволяет указать как будут себя вести элементы внутри строки

        stretch (по-умолчанию) - элементы растягиваются заполняя всю строку по высоте

        flex-start - элементы прижимаются к началу строки(к верху)

        flex-end - элементы прижимаются к концу строки ( к низу)

        center - элементы центрируются по центру строки

        baseline - элементы выравниваются по базовой линии текста(Главная ось начинает
        совпадать с базовой линией)
    */
}


/* Свойства флекс-элементов */


.box div:first-child{
    flex-grow: 1;
    flex-shrink: 0;
    flex-basis: auto;
    /*
        По умолчанию flex-grow 0
        Он позволяет задать коэффициент приоритета увеличения элемента в ширину
        (если flex-direction column то в высоту)

        Краткая запись

        flex: 1 0 auto;

        flex-basis - ширина (или высота если flex-direction column) к которой максимально
        стремится элемент и она учитывается при распределении сводобного пространтсова.
        По-умолчанию - auto
        
    */

    align-self: flex-start;

    /*
        align-self не будет работать, если align-content не stratch, т.к. у строки
        с элементами не будет высоты.

        align-self - является свойством для флекс-элементам, а не родителя

        align-self:
                    stretch (по-умолчанию) - растягивает элемент на всю высоту строки (если flex-direction column, то
                    на всю ширину строки.
                    flex-start - элемент прижимается к верхней стороне строки и высота его зависит от контента внутри
                    flex-end - элемент придимается к низу строки и высота его зависит от контента внутри
                    center - эелемнт располагается по центру строки и высота его завит от контента внутри
                    baseline - элемент выравниается по базовой линии

        Свойство для упорядочивания элементов - order

        По умолчанию order у всех элементов 0

        Если указать элементу значение больше 0, то он станет в порядке очереди по указанному числу.
        Если у остальных элементов значение =0 то элементы у которого больше 0 будет перед ними.


    */

}
